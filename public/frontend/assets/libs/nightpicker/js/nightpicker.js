/*

  SAMO-Soft Nightpicker jQuery Plugin
  by Andrey Krokhin (@andreykrokhin)
  v2018.12.24

  <input class="nightpicker" />
  $('._nightpicker').nightpicker();
  $('._nightpicker').nightpicker('select', 7);

  link: https://habrahabr.ru/post/158235/

*/

(function( $ ){

  var methods = {
    /* –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */
    init: function ( options ) {

      return this.each(function () {

        var settings = $.extend({
          nights: 28,                     // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—á–µ–π
          range: true,                    // –í—ã–±–∏—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–æ—á–µ–π
          multiple: false,                // –í—ã–±–∏—Ä–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ –Ω–æ—á–∏
          altField: 'input.nightpicker',  // –ü–æ–ª–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ—á–µ–π
          separator: ' ‚Äì ',               // –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –Ω–æ—á–µ–π
          sort: true,                     // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –Ω–æ—á–µ–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
          debug: false,                   // DEBUG mode
        }, options);

        var $this = $(this),
             data = $this.data('nightpicker');

        // –ï—Å–ª–∏ –ø–ª–∞–≥–∏–Ω –µ—â—ë –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
        if (!data) {

          if (this.dataset.nights) {
            settings.nights = !!+this.dataset.nights;
          }
          if (this.dataset.range) {
            settings.range = !!+this.dataset.range;
          }
          if (this.dataset.multiple) {
            settings.multiple = !!+this.dataset.multiple;
          }

          // –∑–∞–¥–∞–Ω–∏–µ id –¥–ª—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
          var gid = $('.nightpicker').length;

          $this.data('nightpicker', {
            target: $this,
            gid: gid,
            settings: settings,
            states: {         // —Å–æ—Å—Ç–æ—è–Ω–∏—è (–æ–±–Ω—É–ª—è—é—Ç—Å—è –≤ –º–µ—Ç–æ–¥–µ 'clean')
              nightFrom: 0,   // –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ –ø–µ—Ä–≤–∞—è –Ω–æ—á—å –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ
              nightTo: 0,     // –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è –Ω–æ—á—å –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ
              nights: [],     // –º–∞—Å—Å–∏–≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ—á–µ–π –¥–ª—è multiple
            }
          });
          data = $this.data('nightpicker');

          if (data.settings.debug) {
            console.log('>_ üåô Nightpicker > #' + data.gid, data);
          }

          $this.attr('id', 'nightpicker-' + data.gid);

          // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ—á–µ–π
          $nightpicker = $(document.createElement('div'));
          $nightpicker.addClass('nightpicker');
          for (var i = 1; i <= data.settings.nights; i++) {
            $nightpicker[0].innerHTML += '<div class="nightpicker__night" data-night="'+i+'">'+i+'</div>';
          }
          $this.parent().append($nightpicker);

          // –∫–ª–∏–∫ –ø–æ –Ω–æ—á–∞–º
          $nightpicker.on('click', '.nightpicker__night', function () {
            var $this = $(this),
                currentNight = +this.dataset.night;

            // –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω –∏–Ω—Ç–µ—Ä–≤–∞–ª
            if (data.settings.range && !data.settings.multiple) {
              // –≤—ã–±–æ—Ä –ø–µ—Ä–≤–æ–π —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞, –µ—Å–ª–∏ –≤—Ç–æ—Ä–∞—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ –∏–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –≤—Å–µ
              if ((!data.states.nightFrom && !data.states.nightTo) || (data.states.nightFrom && data.states.nightTo)) {
                data.states.nightFrom = currentNight;
                data.states.nightTo = 0;

                $('.nightpicker__night').removeClass('-range-from-')
                                        .removeClass('-range-to-')
                                        .removeClass('-in-range-')
                                        .removeClass('-selected-');

                $this.addClass('-range-from-').addClass('-selected-');

                // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ—á–µ–π
                $(data.settings.altField).val(data.states.nightFrom);
                $(data.settings.altField).trigger('change');
              }
              // –≤—ã–±–æ—Ä –ø–µ—Ä–≤–æ–π —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞, –µ—Å–ª–∏ –≤—Ç–æ—Ä–∞—è –≤—ã–±—Ä–∞–Ω–∞ –∏ —ç—Ç–æ –Ω–µ —Ç–∞ –∂–µ —Å–∞–º–∞—è —Ç–æ—á–∫–∞
              else if (!data.states.nightFrom && data.states.nightTo && data.states.nightTo !== currentNight) {
                data.states.nightFrom = currentNight;

                $this.addClass('-range-from-').addClass('-selected-');

                // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ—á–µ–π
                $(data.settings.altField).val(data.states.nightFrom + data.settings.separator + data.states.nightTo);
                $(data.settings.altField).trigger('change');
              }
              // –≤—ã–±–æ—Ä –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞, –µ—Å–ª–∏ –ø–µ—Ä–≤–∞—è –≤—ã–±—Ä–∞–Ω–∞ –∏ —ç—Ç–æ –Ω–µ —Ç–∞ –∂–µ —Å–∞–º–∞—è —Ç–æ—á–∫–∞
              else if (data.states.nightFrom && !data.states.nightTo && data.states.nightFrom !== currentNight) {
                data.states.nightTo = currentNight;

                $this.addClass('-range-to-').addClass('-selected-');

                // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ—á–µ–π
                $(data.settings.altField).val(data.states.nightFrom + data.settings.separator + data.states.nightTo);
                $(data.settings.altField).trigger('change');
              }
            }
            // –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω multiple
            else if (!data.settings.range && data.settings.multiple) {
              // –≤—ã–±–æ—Ä –Ω–æ—á–∏, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â—ë –Ω–µ –≤—ã–±—Ä–∞–Ω–∞
              if (data.states.nights.indexOf(currentNight) == -1) {
                $this.addClass('-selected-');

                data.states.nights.unshift(currentNight);

                // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ—á–µ–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
                if (data.settings.sort) {
                  data.states.nights.sort(function(a, b) {
                    return a - b;
                  });
                }

                // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ—á–µ–π
                $(data.settings.altField).val(data.states.nights.join(data.settings.separator));
                $(data.settings.altField).trigger('change');
              } else {
                $this.removeClass('-selected-');
                data.states.nights.splice(data.states.nights.indexOf(currentNight), 1);

                // –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –Ω–æ—á–µ–π
                $(data.settings.altField).val(data.states.nights.join(data.settings.separator));
                $(data.settings.altField).trigger('change');
              }
            }
          });

          // –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–Ω–∏–µ –Ω–æ—á–µ–π
          $nightpicker.on('mouseenter', '.nightpicker__night', function () {
            var $elementHover = $(this),
                elementHover = this,
                elementHoverNight = +elementHover.dataset.night;

            // —É–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É
            $('.nightpicker__night').removeClass('-hover-');
            $elementHover.addClass('-hover-');

            // –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω –∏–Ω—Ç–µ—Ä–≤–∞–ª
            if (data.settings.range && !data.settings.multiple) {

              // –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å —Ç–æ—á–∫–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–π —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞, –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è —Ç–æ—á–∫–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞
              if (data.states.nightFrom && !data.states.nightTo) {
                // –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –±–æ–ª—å—à–µ –ø–µ—Ä–≤–æ–π —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
                if (elementHoverNight > data.states.nightFrom) {
                  // –≤—ã–¥–µ–ª–∏—Ç—å –µ—ë –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª
                  $('.nightpicker__night').removeClass('-range-to-');
                  $elementHover.addClass('-range-to-');

                  $('.nightpicker__night').removeClass('-in-range-').each(function (index, element) {
                    var $element = $(element),
                        elementNight = +element.dataset.night;

                    // –≤—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ —Ç–æ—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –ø–µ—Ä–≤–æ–π —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –∏ –º–µ–Ω—å—à–µ —Ç–µ–∫—É—â–µ–π
                    if (elementNight > data.states.nightFrom && elementNight < elementHoverNight) {
                      $element.addClass('-in-range-');
                    }
                  });
                }
                // –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –º–µ–Ω—å—à–µ –ø–µ—Ä–≤–æ–π —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
                else if (elementHoverNight < data.states.nightFrom) {
                  // –ø–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ –ø–æ—Å–ª–µ–¥–Ω—é—é –∏ –ø–µ—Ä–≤—É—é —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
                  data.states.nightTo = data.states.nightFrom;
                  data.states.nightFrom = 0;

                  $('.nightpicker__night').removeClass('-range-from-').removeClass('-range-to-').removeClass('-in-range-').each(function (index, element) {
                    var $element = $(element),
                        elementNight = +element.dataset.night;

                    // –≤—ã–¥–µ–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç–æ—á–∫—É –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
                    if (elementNight == data.states.nightTo) {
                      $element.addClass('-range-to-');
                    }
                    // –≤—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ —Ç–æ—á–∫–∏ –º–µ–∂–¥—É —Ç–µ–∫—É—â–µ–π –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–æ—á–∫–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
                    if (elementNight < data.states.nightTo && elementNight > elementHoverNight) {
                      $element.addClass('-in-range-');
                    }
                  });
                }
              }

              // –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å —Ç–æ—á–∫–∏ –ø–µ—Ä–µ–¥ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–æ—á–∫–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞, –µ—Å–ª–∏ –ø–µ—Ä–≤–∞—è —Ç–æ—á–∫–∞ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞
              else if (!data.states.nightFrom && data.states.nightTo) {
                // –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –º–µ–Ω—å—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
                if (elementHoverNight < data.states.nightTo) {
                  // –≤—ã–¥–µ–ª–∏—Ç—å –µ—ë –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª
                  $('.nightpicker__night').removeClass('-range-from-');
                  $elementHover.addClass('-range-from-');

                  $('.nightpicker__night').removeClass('-in-range-').each(function (index, element) {
                    var $element = $(element),
                        elementNight = +element.dataset.night;

                    // –≤—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ —Ç–æ—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ —Ç–µ–∫—É—â–µ–π –∏ –º–µ–Ω—å—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
                    if (elementNight < data.states.nightTo && elementNight > elementHoverNight) {
                      $element.addClass('-in-range-');
                    }
                  });
                }
                // –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–∞—è —Ç–æ—á–∫–∞ –±–æ–ª—å—à–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
                else if (elementHoverNight > data.states.nightTo) {
                  // –ø–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ –ø–æ—Å–ª–µ–¥–Ω—é—é –∏ –ø–µ—Ä–≤—É—é —Ç–æ—á–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
                  data.states.nightFrom = data.states.nightTo;
                  data.states.nightTo = 0;

                  $('.nightpicker__night').removeClass('-range-from-').removeClass('-range-to-').removeClass('-in-range-').each(function (index, element) {
                    var $element = $(element),
                        elementNight = +element.dataset.night;

                    // –≤—ã–¥–µ–ª–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç–æ—á–∫—É –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
                    if (elementNight == data.states.nightFrom) {
                      $element.addClass('-range-from-');
                    }
                    // –≤—ã–¥–µ–ª–∏—Ç—å –≤—Å–µ —Ç–æ—á–∫–∏ –º–µ–∂–¥—É —Ç–µ–∫—É—â–µ–π –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ç–æ—á–∫–æ–π –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
                    if (elementNight > data.states.nightFrom && elementNight < elementHoverNight) {
                      $element.addClass('-in-range-');
                    }
                  });
                }
              }

            }
          });

          // —É–±—Ä–∞—Ç—å –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–Ω–∏–µ –Ω–æ—á–µ–π
          $nightpicker.on('mouseleave', '.nightpicker__night', function () {
            var $elementHover = $(this);
            $elementHover.removeClass('-hover-');
          });

          if (data.settings.debug) {
            console.log('>_ üåô Nightpicker > #' + data.gid + ' is Inited!');
          }

        }
      });

    },
    /* –≤—ã–±—Ä–∞—Ç—å –Ω–æ—á—å */
    select: function ( nights ) {

      return this.each(function () {
        var $this = $(this),
             data = $this.data('nightpicker');

        // –≤—ã–±–æ—Ä –Ω–æ—á–µ–π –¥–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
        if (data.settings.range && !data.settings.multiple) {
          $('.nightpicker__night').each(function (index, element) {
            if (element.dataset.night == nights) {
              $(this).trigger('mouseenter').trigger('click');
            }
          });
        }
        // –≤—ã–±–æ—Ä –Ω–æ—á–µ–π –¥–ª—è multiple
        else if (!data.settings.range && data.settings.multiple) {
          $('.nightpicker__night').each(function (index, element) {
            if (nights.indexOf(+element.dataset.night) !== -1) {
              $(this).trigger('mouseenter').trigger('click');
            }
          });
        }

        if (data.settings.debug) {
          console.log('>_ üåô Nightpicker > #' + data.gid + ' is Selected!');
        }
      });

    },
    /* –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–ª–∞–≥–∏–Ω–∞ */
    update: function ( options ) {

      return this.each(function () {
        var $this = $(this),
             data = $this.data('nightpicker');

        data.settings = $.extend(data.settings, options);

        $(data.settings.altField).trigger('change');

        if (data.settings.debug) {
          console.log('>_ üåô Nightpicker > #' + data.gid + ' is Updated!', data.settings);
        }
      });

    },
    /* —Å–±—Ä–æ—Å–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –Ω–æ—á–∏ */
    clear: function ( ) {

      return this.each(function () {
        var $this = $(this),
             data = $this.data('nightpicker');

        data.states = {
          nightFrom: 0,
          nightTo: 0,
          nights: [],
        }
        $this.data('nightpicker', data);

        $('.nightpicker__night').removeClass('-range-from-')
                                .removeClass('-range-to-')
                                .removeClass('-in-range-')
                                .removeClass('-selected-');

        $(data.settings.altField).val('');

        if (data.settings.debug) {
          console.log('>_ üåô Nightpicker > #' + data.gid + ' is Cleared!');
        }
      });

    },
    /* —É–¥–∞–ª–µ–Ω–∏–µ –ø–ª–∞–≥–∏–Ω–∞ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */
    /*destroy: function( ) {

      return this.each(function() {
        var $this = $(this),
             data = $this.data('lamaprogress');

        $this.unbind('ajaxStart');
        $this.unbind('ajaxStop');
        $this.unbind('ajaxError');

        $(window).unbind('.lamaprogress');
        data.lamaprogress.remove();
        $this.removeData('lamaprogress');
        $this.empty();

        if (data.settings.debug) {
          console.log('>_ StratosüöÄ LamaProgress > #' + data.gid + ' is Destroy!');
        }
      });

    }*/
    /* –¥–æ–±–∞–≤–∏—Ç—å –∫–ª–∞—Å—Å –∫ —ç–ª–µ–º–µ–Ω—Ç—É / –º–∞—Å—Å–∏–≤—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ / –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º */
    addClass: function ( userClass, nights ) {

      return this.each(function () {
        var $this = $(this),
             data = $this.data('nightpicker');

        $('.nightpicker__night').each(function (index, element) {
          // –≤—Å–µ –Ω–æ—á–∏
          if (!nights) {
            $(this).addClass(userClass);
          }
          // –æ–¥–Ω–∞ –Ω–æ—á—å
          else if (!Array.isArray(nights)) {
            if (element.dataset.night == nights) {
              $(this).addClass(userClass);
            }
          }
          // –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –Ω–æ—á–µ–π
          else {
            if (nights.indexOf(+element.dataset.night) !== -1) {
              $(this).addClass(userClass);
            }
          }
        });

        if (data.settings.debug) {
          console.log('>_ üåô Nightpicker > #' + data.gid + ' - classes are Added!');
        }
      });

    },
    /* —É–±—Ä–∞—Ç—å –∫–ª–∞—Å—Å —É —ç–ª–µ–º–µ–Ω—Ç–∞ / –º–∞—Å—Å–∏–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ */
    removeClass: function ( userClass, nights ) {

      return this.each(function () {
        var $this = $(this),
             data = $this.data('nightpicker');

        $('.nightpicker__night').each(function (index, element) {
          // –≤—Å–µ –Ω–æ—á–∏
          if (!nights) {
            $(this).removeClass(userClass);
          }
          // –æ–¥–Ω–∞ –Ω–æ—á—å
          else if (!Array.isArray(nights)) {
            if (element.dataset.night == nights) {
              $(this).removeClass(userClass);
            }
          }
          // –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –Ω–æ—á–µ–π
          else {
            if (nights.indexOf(+element.dataset.night) !== -1) {
              $(this).removeClass(userClass);
            }
          }
        });

        if (data.settings.debug) {
          console.log('>_ üåô Nightpicker > #' + data.gid + ' - classes are Removed!');
        }
      });

    },
  };

  $.fn.nightpicker = function( method ) {

    if ( methods[method] ) {
      return methods[ method ].apply( this, Array.prototype.slice.call( arguments, 1 ));
    } else if ( typeof method === 'object' || ! method ) {
      return methods.init.apply( this, arguments );
    } else {
      $.error( '>_ üåô Nightpicker method - ' +  method + ' is not defined!' );
    }

  };
})( jQuery );
